language: python
python:
  - 2.7

os:
  - linux
  - osx

# Setup anaconda
before_install:
  # Download appropriate version depending on OS
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh -O miniconda.sh;
    fi
  # Install
  - chmod +x miniconda.sh
  - ./miniconda.sh -b
  - export PATH=$HOME/miniconda2/bin:$PATH
  # Add conda-forge as first channel (that's why we use --add and not --append)
  - conda config --add conda-forge
  - conda update --yes -q conda
  - conda config --set always_yes true
  - conda config --set anaconda_upload no

# Install packages
install:
  # Install conda build, anaconda client, codecov and pytest
  - conda install -q python=$TRAVIS_PYTHON_VERSION pip requests conda-build jinja2 anaconda-client pytest codecov

# Run test
script:
  # Build package
  - conda build -c conda-forge -c threeml --python=$TRAVIS_PYTHON_VERSION conda-dist/recipe
  # Install it
  - conda install --use-local astromodels
  # Run tests
  - python -m pytest -vv --cov=astromodels

after_success:
  # Upload coverage measurements
  - codecov -t 493c9a2d-42fc-40d6-8e65-24e681efaa1e
  # If we are on the master branch upload to the channel
  - if [[ "$TRAVIS_BRANCH" == "linux" ]]; then
        anaconda -t $CONDA_UPLOAD_TOKEN upload -u threeml $CONDA_BLD_PATH/$TRAVIS_OS_NAME-64/*.tar.bz2 --force
    else
        echo "On a branch, not uploading to Conda channel"
    fi

env:
  matrix:
    secure: ht6GWpJyaTqTCQzTXuf7IQDKyl1OUISFXzHaLCcurBY5lZVkK+NIGaVMw0wNksQbgpF5t7JyojK39+usJ1WeYD4xvi3n7KxU9Cy8MGAuyY8iWFCmnVtkBoDkghGQBuUzf2UZ24IcH1JtlgOx28qJhEdXLfWPDd9/OvJLMrkpwcKcn0XV3dcheYvs3EyV8kyxfbaV3G9DsHY1bFZjGRzOATBuwCSpjkV5WxBq0dpDoilx6JY9uMydKU81PtxHbCQmP/8ZaT9eemw1qhBfrqbhU+CbwG0PDt7lG8SkXAIOQRJo/aJ7DvxtOQAvjuM1CUsKa8yTnyDHvxHVIcLZmiuWi/Cat20/v89iyBgXguDbKAGwg4gIW/QSfxS9IFR3eR5EX8NuTZ9tcAHoa+AHou5Km/iDoEjlqu11CFr/QYtaqFcnkMpuVs4mYfdiU5xLtZryiBqec0HO8xD9Q4IKIbEGMyulJ3NBwqQ6x9iHtqJrM0JinAynLXTcHHGzOhD+YVZbT4EzlH+8dLuMj33DYdJATZAt7pIpxskqBXvPm+qKPs5TUtxDtOinpuBk264kQdxUFXFpAzL5x2qguTauhi+t4f/bMVsFcq3KsL3nn3J021ysEzZqeGmmGs6hHfGTZbZNgMhtyO+18WHtnDOD5s8fjO+58T/Z0hqJbrfjulsNNr8=
